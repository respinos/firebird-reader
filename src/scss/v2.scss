@import '~firebird-common/src/scss/styles.scss';

.btn.btn-outline-dark {
  --bs-btn-bg: white;
  // background-color: var(--bs-btn-bg);

  &:hover {
    background-color: var(--bs-btn-hover-bg);
  }
}

.apps {
  overflow: hidden;
  width: 100%;

  height: 100dvh;
  width: 100dvw;

  #root {
    --aside-width: 20rem;
    --aside-min-width: 10rem;

    --aside-maximized-width: 0%;

    height: 100dvh;
    width: 100dvw;

    overflow: hidden;
    position: relative;

    display: grid;
    grid-template-areas: 
      "header header header"
      "options options options"
      "aside divider reader";
    grid-template-rows: 
      var(--header-collapsed-height, min-content)
      min-content
      minmax(0, 1fr);
    grid-template-columns: 
      var(--aside-collapsed-width, minmax(var(--aside-min-width), var(--aside-width))) 
      min-content 
      minmax(0, 1fr);

    @media ( max-width: 700px ) {
      grid-template-areas: 
        "header header"
        "options options"
        "aside reader";
      grid-template-columns:
        0% 100%;

      .divider {
        display: none;
      }

      main {
        width: 100dvw;
      }

      &[data-aside-expanded="true"] {
        grid-template-columns: 100% 0%;
      }
    }
  }

}

hathi-website-header  {
  grid-area: header;
  min-height: 5rem;
  background: darkorange;
}

.reader {
  grid-area: reader;
}



aside {
  // min-width: 20rem;
  background: darkgoldenrod;
  overflow: auto;

  .inner {
    min-width: 20rem;
    overflow: auto;
    padding: 1rem;
  }
}

main {
  display: grid;
  position: relative;
  grid-template-rows: minmax(0, 1fr);

  grid-area: reader;

  background: darkolivegreen;
}

.divider {
  grid-area: divider;
  width: 1rem;
  margin: 0;

  background: #fff;
  cursor: ew-resize;
  
  position: relative;

  &::before {
    display: block;
    content: "";
    position: absolute;
    background: black;
    top: 0;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 1px;
  }

  button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%);
    z-index: 150;
    cursor: pointer;
  }

  &:hover {
    background: darkturquoise;

    // &::before {
    //   display: block;
    //   content: "";
    //   position: absolute;
    //   top: 0;
    //   bottom: 0;
    //   left: 0;
    //   right: 0;
    //   background: darkturquoise;
    // }

  }
}

.pane--search, .pane--restricted {
  display: grid;
  grid-template-rows: 1fr;
  background: white !important;
}

.accordion-body p:last-child {
  margin-bottom: 0;
}

.accordion-button.fixed {
  background: transparent;
  &::after {
    display: none;
  }
}

button:hover i.border-dark {
  border-color: #fff !important;
}

:root {
  --shadow-color: 0deg 0% 48%;
  --shadow-elevation-low:
    0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.49),
    0.5px 0.9px 1.2px -1.2px hsl(var(--shadow-color) / 0.49),
    1.2px 2.4px 3px -2.5px hsl(var(--shadow-color) / 0.49);
  --shadow-elevation-medium:
    0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.51),
    0.9px 1.9px 2.4px -0.8px hsl(var(--shadow-color) / 0.51),
    2.4px 4.9px 6.1px -1.7px hsl(var(--shadow-color) / 0.51),
    6px 12.1px 15.2px -2.5px hsl(var(--shadow-color) / 0.51);
  --shadow-elevation-high:
    0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.48),
    2px 3.9px 4.9px -0.4px hsl(var(--shadow-color) / 0.48),
    3.7px 7.5px 9.4px -0.7px hsl(var(--shadow-color) / 0.48),
    6.2px 12.4px 15.6px -1.1px hsl(var(--shadow-color) / 0.48),
    10px 20px 25.2px -1.4px hsl(var(--shadow-color) / 0.48),
    15.7px 31.4px 39.5px -1.8px hsl(var(--shadow-color) / 0.48),
    23.9px 47.8px 60.1px -2.1px hsl(var(--shadow-color) / 0.48),
    35.3px 70.5px 88.7px -2.5px hsl(var(--shadow-color) / 0.48);
}